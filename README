==== Install development tools ====

Run tests/perform-osm-installation script!


==== Create instances ====

------ Core #1 -------

./create-instance Core1-SimulaMet-OAI-EPC.yaml

Helper scripts: sshA1 ... sshA4 for SSH to HSS, MME, SPGW-C and SPGW-U


------ Core #2 -------

./create-instance Core2-SimulaMet-OAI-EPC.yaml
./create-instance Core2-SimulaMet-FlexRAN.yaml

Helper scripts:
* sshB1 ... sshB4 for SSH to HSS, MME, SPGW-C and SPGW-U of Core #1
* sshF for SSH to FlexRAN Controller


------ 1 Core setup for CloudRAN demo scenario ------

./create-instance SimulaMet-CloudRAN.yaml

Helper scripts: sshC1 ... sshC4 for SSH to HSS, MME, SPGW-C and SPGW-U



==== If something goes wrong: debugging commands ====

* Watch Juju status:

 watch -n 5 --color juju status --color

* Simple check for failed Juju actions:

 ./show-failed-juju-actions

* Get Juju status:

   juju status

* SSH into Juju container of VDU:

   juju ssh <Unit>

   Unit is from "juju status".
   /var/log/juju/unit-* is the log file of the Charm.

* Get output of Juju actions:

   juju show-action-status

   juju show-action-output <ID>

   ID is from "juju show-action-status".
   The output contains the "message" of function_fail(), as well as stdout and stderr!

* If Juju fails to destroy the Juju model, blocking removal of a NS:

   juju list-models

   juju destroy-model --force -y <ID>

   Important: --force may be necessary of NS removal is blocking due to problems removing the Juju model.
